name: UI Tests

on: workflow_dispatch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Восстанавливаем историю Allure, если она есть
    - name: Restore Allure history
    - name: Try to Restore Allure history (if exists)
      continue-on-error: true
      uses: actions/download-artifact@v4
      with:
        name: allure-history
        path: allure-results/history

    # Убеждаемся, что директория истории существует
    - name: Ensure Allure history directory exists
      run: mkdir -p allure-results/history

    # Запускаем UI-тесты через Docker Compose
    - name: Run UI-tests via Docker Compose
      run: docker compose up --build --exit-code-from regression

    # Генерируем отчет Allure с историей
    - name: Generate Allure report with history
      run: |
        mkdir -p allure-results/history
        cp -r allure-report/history allure-results/
        cp -r allure-results/history allure-report/ || true
        docker compose run regression /bin/sh -c "allure generate allure-results --clean -o allure-report"

    # Загружаем отчет Allure как артефакт
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report

    # Загружаем историю Allure как артефакт
    - name: Download Allure history
    - name: Try to Download Allure history (if exists)
      continue-on-error: true
      uses: actions/download-artifact@v4
      with:
        name: allure-history
        path: allure-report/history

    # Убеждаемся, что директория истории существует перед развертыванием
    - name: Ensure Allure history directory exists
      run: mkdir -p allure-report/history

    # Разворачиваем отчет на GitHub Pages
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.CI_TOKEN }}
        publish_dir: allure-report