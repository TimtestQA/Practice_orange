name: UI Tests

on: workflow_dispatch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # 1. Извлекаем историю из gh-pages, если она есть
    - name: Restore Allure history from gh-pages
      run: |
        git fetch origin gh-pages --depth=1 || echo "No gh-pages branch yet"
        mkdir -p allure-results/history
        git checkout gh-pages -- allure-report/history || echo "No history folder found in gh-pages"
        if [ -d allure-report/history ]; then
          cp -R allure-report/history/* allure-results/history/
        else
          echo "No previous history found"
        fi

    - name: Ensure Allure history directory exists
      run: mkdir -p allure-results/history

    # 2. Запускаем UI-тесты
    - name: Run UI-tests via Docker Compose
      run: docker compose up --build --exit-code-from regression

    # 3. Генерируем Allure-отчет
    - name: Generate Allure report with history
      run: |
        docker compose run regression /bin/sh -c "allure generate allure-results -o allure-report"
        cp -R allure-results/history allure-report/ || true  # Копируем историю после генерации

    # 4. Загружаем Allure отчет как артефакт
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report

    # 5. Загружаем Allure history как артефакт
    - name: Upload Allure history
      uses: actions/upload-artifact@v4
      with:
        name: allure-history
        path: allure-report/history

  deploy:
    name: Deploy to GitHub Pages
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # 6. Загружаем Allure отчет из артефактов
    - name: Download Allure Report
      uses: actions
